<feed xmlns="http://www.w3.org/2005/Atom"> <id>/blog/</id><title>AJK Blog</title><subtitle>AJK Blog for technical writing.</subtitle> <updated>2025-03-23T16:48:35-05:00</updated> <author> <name>Ashim Khadka</name> <uri>/blog/</uri> </author><link rel="self" type="application/atom+xml" href="/blog/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="/blog/"/> <generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator> <rights> © 2025 Ashim Khadka </rights> <icon>/blog/assets/img/favicons/favicon.ico</icon> <logo>/blog/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Processing Large Datasets Efficiently with Spring Boot and JDK</title><link href="/blog/posts/processing-large-datasets/" rel="alternate" type="text/html" title="Processing Large Datasets Efficiently with Spring Boot and JDK" /><published>2025-03-04T12:52:00-06:00</published> <updated>2025-03-23T16:47:26-05:00</updated> <id>/blog/posts/processing-large-datasets/</id> <content type="text/html" src="/blog/posts/processing-large-datasets/" /> <author> <name>Ashim Khadka</name> </author> <category term="spring" /> <summary>Handling large datasets efficiently requires careful consideration of three key factors: Input – Where the data originates (CSV, Oracle, etc.). Process – How the data is processed (Spring Boot, multi-threading, batch processing). Output – Where the processed data is stored (Oracle, distributed storage, etc.). This post explores strategies for optimizing data processing using Spring Bo...</summary> </entry> <entry><title>Table-Level Lock in Oracle</title><link href="/blog/posts/table-level-lock-in-oracle/" rel="alternate" type="text/html" title="Table-Level Lock in Oracle" /><published>2022-05-10T02:21:00-05:00</published> <updated>2025-01-20T16:07:38-06:00</updated> <id>/blog/posts/table-level-lock-in-oracle/</id> <content type="text/html" src="/blog/posts/table-level-lock-in-oracle/" /> <author> <name>Ashim Khadka</name> </author> <category term="database" /> <summary>Lock mode The numeric values for this column map to these text values for the lock modes for table locks: 0- NONE: lock requested but not yet obtained 1- NULL 2- ROWS_S (RS): Row Share Lock indicates that the transaction holding the lock on the table has locked rows in the table and intends to update them. 3- ROW_X (RX): Row Exclusive Table Lock indicate...</summary> </entry> <entry><title>Table-Level Lock in PostgreSQL</title><link href="/blog/posts/table-level-lock-in-postgres/" rel="alternate" type="text/html" title="Table-Level Lock in PostgreSQL" /><published>2022-05-10T01:49:00-05:00</published> <updated>2025-01-20T16:07:38-06:00</updated> <id>/blog/posts/table-level-lock-in-postgres/</id> <content type="text/html" src="/blog/posts/table-level-lock-in-postgres/" /> <author> <name>Ashim Khadka</name> </author> <category term="database" /> <summary>Tables that provide Stats pg_stat_activity : shows information related to the current activity of that process. pg_class : catalogs tables that shows information about table, view, index, etc. pg_locks : provides information about the locks held by active processes. pg_stat_all_tables : shows statistics about accesses of the table. pg_stat_all_indexes : shows statistics about access...</summary> </entry> <entry><title>Using Index in PostgreSQL and Oracle</title><link href="/blog/posts/using-index-in-postgres-oracle/" rel="alternate" type="text/html" title="Using Index in PostgreSQL and Oracle" /><published>2022-05-09T04:41:00-05:00</published> <updated>2025-01-20T16:07:38-06:00</updated> <id>/blog/posts/using-index-in-postgres-oracle/</id> <content type="text/html" src="/blog/posts/using-index-in-postgres-oracle/" /> <author> <name>Ashim Khadka</name> </author> <category term="database" /> <summary>Using an index is one of the common ways to optimize performance. And there are things, need to be considered while creating it. Like, what happens when multiple fields need to be used for indexing? what will be the order for those fields? do multiple indexes going to overlap each other? what is the limit for creating an index for any table? These are the few concerns, that will gui...</summary> </entry> <entry><title>Spring Boot - @TestConfiguration</title><link href="/blog/posts/spring-boot-test-config-annotation/" rel="alternate" type="text/html" title="Spring Boot - @TestConfiguration" /><published>2021-12-27T06:31:00-06:00</published> <updated>2025-01-20T16:07:38-06:00</updated> <id>/blog/posts/spring-boot-test-config-annotation/</id> <content type="text/html" src="/blog/posts/spring-boot-test-config-annotation/" /> <author> <name>Ashim Khadka</name> </author> <category term="spring" /> <summary>The @TestConfiguration is one of the annotations, which can be used for writing unit tests or integration tests in a Spring Boot Application. Since, @TestConfiguration is not a new thing, and it has already been explained by many posts/articles or you can refer to one of them from the reference section below. And, I am not going to add another one to the list. So, what is this article about? ...</summary> </entry> </feed>
